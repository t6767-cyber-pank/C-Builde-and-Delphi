//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
#include "sqlite3.h"
#pragma comment(lib,"sqlite3.lib")

char * us="t67";
sqlite3 *database;
sqlite3_stmt *stmt;
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}


void TForm1::createTable()
{
sqlite3_open(us, &database);
sqlite3_prepare_v2(database, "CREATE TABLE products(id_products integer primary key autoincrement, products TEXT NOT NULL, category TEXT, cena TEXT, data TEXT);", -1, &stmt, NULL);
sqlite3_step(stmt);      // готов все кроме изменения данных
sqlite3_finalize(stmt);
sqlite3_close(database);
}

void TForm1::sell(int z)
{
int b;
String strbind;
sqlite3_open(us, &database);
switch(z)
{
case 11:
	sqlite3_prepare_v2(database, "select products, category, cena, data, id_products from products where products LIKE ?;", -1, &stmt, 0); //
	strbind="%"+Edit1->Text+"%";
	sqlite3_bind_text16( stmt, 1, strbind.c_str(), -1, 0);
	addtotable();
	break;
/*
case 12:
		sqlite3_prepare_v2(database, "insert into bazusers(uname, dolg, zvanie, login, password, status) values(?, ?, ?, ?, ?, ?);", -1, &stmt, 0);
		sqlite3_bind_text16( stmt, 1, Form2->Edit1->Text.c_str(), -1, 0);
		sqlite3_bind_text16( stmt, 2, Form2->ComboBox1->Text.c_str(), -1, 0);
		sqlite3_bind_text16( stmt, 3, Form2->ComboBox2->Text.c_str(), -1, 0);
		sqlite3_bind_text16( stmt, 4, Form2->Edit4->Text.c_str(), -1, 0);
		sqlite3_bind_text16( stmt, 5, Form2->Edit5->Text.c_str(), -1, 0);
		sqlite3_bind_text16( stmt, 6, Form2->ComboBox3->Text.c_str(), -1, 0);
		sqlite3_step(stmt);
	break;
case 13:
		b=Form2->StringGrid1->Cells[5][Form2->StringGrid1->Row].ToInt();
		sqlite3_prepare_v2(database, "delete from bazusers where id_uesr=?;", -1, &stmt, 0);
		sqlite3_bind_int(stmt, 1, b);
		sqlite3_step(stmt);
	break;
case 14:
		sqlite3_prepare_v2(database, "update bazusers set uname=?, dolg=?, zvanie=?, login=?, password=?, status=?  where id_uesr=?;", -1, &stmt, 0);
		sqlite3_bind_text16( stmt, 1, Form10->Edit1->Text.c_str(), -1, 0);
		sqlite3_bind_text16( stmt, 2, Form10->ComboBox1->Text.c_str(), -1, 0);
		sqlite3_bind_text16( stmt, 3, Form10->ComboBox2->Text.c_str(), -1, 0);
		sqlite3_bind_text16( stmt, 4, Form10->Edit4->Text.c_str(), -1, 0);
		sqlite3_bind_text16( stmt, 5, Form10->Edit5->Text.c_str(), -1, 0);
		sqlite3_bind_text16( stmt, 6, Form10->ComboBox3->Text.c_str(), -1, 0);
		sqlite3_bind_int( stmt, 7, Form10->id_user);
		sqlite3_step(stmt);
	break;
case 21:
		sqlite3_prepare_v2(database, "insert into dolg(dolg) values(?);", -1, &stmt, 0);
		sqlite3_bind_text16( stmt, 1, Form3->Edit1->Text.c_str(), -1, 0);
		sqlite3_step(stmt);
	break;
case 22:
	sqlite3_prepare_v2(database, "select dolg, id_dolg from dolg;", -1, &stmt, 0);
	addtotableDolg();
	break;
case 23:
		b=Form3->StringGrid1->Cells[1][Form3->StringGrid1->Row].ToInt();
		sqlite3_prepare_v2(database, "delete from dolg where id_dolg=?;", -1, &stmt, 0);
		sqlite3_bind_int(stmt, 1, b);
		sqlite3_step(stmt);
	break;
case 24:
	sqlite3_prepare_v2(database, "select dolg, id_dolg from dolg;", -1, &stmt, 0);
	addtoCb(Form2->ComboBox1);
	break;
case 25:
		b=Form3->StringGrid1->Cells[1][Form3->StringGrid1->Row].ToInt();
		sqlite3_prepare_v2(database, "update dolg set dolg=? where id_dolg=?;", -1, &stmt, 0);
		sqlite3_bind_text16( stmt, 1, Form3->Edit3->Text.c_str(), -1, 0);
		sqlite3_bind_int(stmt, 2, b);
		sqlite3_step(stmt);
	break;  */
}
sqlite3_reset(stmt);
sqlite3_finalize(stmt);
sqlite3_close(database);
}

void TForm1::addtotable()
{
	StringGrid1->Width=505;
	StringGrid1->ColCount=4;
	StringGrid1->ColWidths[0]=200;
	StringGrid1->ColWidths[1]=150;
	StringGrid1->ColWidths[2]=150;
	StringGrid1->ColWidths[3]=100;
	StringGrid1->Cells[0][0]="Продукт";
	StringGrid1->Cells[1][0]="Категория";
	StringGrid1->Cells[2][0]="Цена";
	StringGrid1->Cells[3][0]="Дата";
	StringGrid1->Cells[4][0]="0";
	int i=1;
	while (sqlite3_step( stmt ) == SQLITE_ROW )
	{
	StringGrid1->Cells[0][i]=(wchar_t*)sqlite3_column_text16( stmt, 0);
	StringGrid1->Cells[1][i]=(wchar_t*)sqlite3_column_text16( stmt, 1);
	StringGrid1->Cells[2][i]=(wchar_t*)sqlite3_column_text16( stmt, 2);
	StringGrid1->Cells[3][i]=(wchar_t*)sqlite3_column_text16( stmt, 3);
	StringGrid1->Cells[4][i]=(wchar_t*)sqlite3_column_text16( stmt, 4);
	i++;
	}
	StringGrid1->RowCount=i;
}
//---------------------------------------------------------------------------
void __fastcall TForm1::FormCreate(TObject *Sender)
{
createTable();
sell(11);
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Edit1Change(TObject *Sender)
{
sell(11);
}
//---------------------------------------------------------------------------
